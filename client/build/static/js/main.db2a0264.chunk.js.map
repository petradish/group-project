{"version":3,"sources":["history.js","store/user.js","store/classroom.js","socket.js","store/topic.js","store/project.js","store/index.js","components/Login.js","components/app/NotFound.js","components/app/JoinProject.js","components/TitleBar.js","components/admin/Project.js","components/admin/CreateProject.js","components/admin/Classroom.js","components/admin/CreateClassroom.js","components/admin/Admin.js","components/app/Popup.js","components/app/Topic.js","components/Home.js","components/admin/ComingSoon.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","defaultUser","logout","dispatch","a","axios","get","type","push","console","error","gotClassroom","classroom","GET_CLASSROOM","socket","require","connect","window","location","origin","on","log","id","selectedTopic","allTopics","SELECT_TOPIC","getAllTopics","projectId","data","GET_ALL_TOPICS","gotProject","project","GET_PROJECT","getProject","linkName","GET_ALL_CLASSROOMS","store","rootReducer","combineReducers","user","state","action","classrooms","topic","middleware","applyMiddleware","thunkMiddleware","createLogger","collapsed","createStore","Login","className","href","NotFound","props","pathname","useState","setLinkName","replace","htmlFor","name","onChange","e","target","value","disabled","onClick","JoinProject","TitleBar","text","icon","faSignOutAlt","Project","topics","maxStudents","shortName","instructions","description","initialState","showDetail","editTopics","isDirty","isTopicsListDirty","newTopicCount","errors","keyBy","toggleViewDetail","bind","handleTopicChange","handleChange","handleSubmit","addTopic","deleteTopic","deleteProject","this","setState","evt","preventDefault","fetchClassroom","isString","trim","minStudents","maxBy","values","t","students","length","regex","RegExp","test","isEmpty","compact","map","it","updateProject","toString","startsWith","omit","partition","newTopics","oldTopics","sortBy","concat","faEdit","key","defaultValue","faTrashAlt","faPlus","rel","faExternalLinkAlt","placeholder","min","max","title","faCheck","Component","post","topicId","CreateProject","classroomId","createProject","setIsAdding","formNotValid","Classroom","isAdding","getClassroom","projects","CreateClassroom","createClassroom","getClassrooms","setClassroom","Admin","classroomName","Popup","closePopup","React","Topic","isFull","rgb","i","r","Math","floor","random","style","backgroundColor","selectTopic","s","Home","showPopup","handleSelect","find","googleId","alert","chooseTopic","student","getTopics","columnNum","ceil","sqrt","emit","ComingSoon","Routes","getUser","then","isLoggedIn","includes","split","exact","path","component","render","withRouter","res","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db2a0264.chunk.js","sourcesContent":["import {createBrowserHistory, createMemoryHistory} from 'history';\n\nconst history =\n    process.env.NODE_ENV === 'test'\n        ? createMemoryHistory()\n        : createBrowserHistory()\n\nexport default history","import axios from 'axios';\nimport history from '../history';\n\n/**\n * ACTION TYPES\n */\nconst GET_USER = 'GET_USER'\nconst REMOVE_USER = 'REMOVE_USER'\n\n/**\n * INITIAL STATE\n */\nconst defaultUser = {}\n\n/**\n * ACTION CREATORS\n */\nconst getUser = user => ({type: GET_USER, user})\nconst removeUser = () => ({type: REMOVE_USER})\n\n/**\n * THUNK CREATORS\n */\nexport const me = () => async dispatch => {\n    try {\n        const res = await axios.get('/auth/me')\n        dispatch(getUser(res.data))\n    } catch (err) {\n        console.error(err)\n    }\n}\n\nexport const logout = () => async dispatch => {\n    try {\n        await axios.get('/auth/logout')\n        dispatch(removeUser())\n        history.push('/')\n    } catch (err) {\n        console.error(err)\n    }\n}\n\n/**\n * REDUCER\n */\nexport default function user(state = defaultUser, action) {\n    switch (action.type) {\n        case GET_USER:\n            return action.user\n        case REMOVE_USER:\n            return defaultUser\n        default:\n            return state\n    }\n}","import axios from 'axios'\n\n// ACTION TYPES\nimport {GET_ALL_CLASSROOMS, GET_CLASSROOM} from './index'\n\n// ACTION CREATORS\nexport function gotAllClassrooms(classrooms) {\n    const action = {type: GET_ALL_CLASSROOMS, classrooms};\n    return action;\n}\n\nexport function gotClassroom(classroom) {\n    const action = {type: GET_CLASSROOM, classroom};\n    return action;\n}\n\n// THUNKS\nexport const getAllClassrooms = () => {\n    return async dispatch => {\n        try {\n            const {data} = await axios.get('/api/classrooms/all/mine');\n            dispatch(gotAllClassrooms(data));\n        } catch (err) {\n            console.error(err);\n        }\n    };\n};\n\nexport const getClassroom = (id) => {\n    return async dispatch => {\n        const {data} = await axios.get(`/api/classrooms/${id}`);\n        dispatch(gotClassroom(data));\n    };\n};\n\nexport const createClassroom = (classroom) => {\n    return async dispatch => {\n        const {data} = await axios.post(`/api/classrooms/create`, classroom);\n        dispatch(gotClassroom(data));\n    };\n};\n\nexport const updateClassroom = (classroom) => {\n    return async dispatch => {\n        const {data} = await axios.post(`/api/classrooms/update`, classroom);\n        dispatch(gotClassroom(data));\n    };\n};\n\nexport const deleteClassroom = (id) => {\n    return async () => {\n        await axios.get(`/api/classrooms/delete/${id}`);\n    };\n};\n\nexport const deleteStudent = ({id, googleId}) => {\n    return async dispatch => {\n        const {data} = await axios.post(`/api/classrooms/delete/student/${id}`, googleId);\n        dispatch(gotClassroom(data));\n    };\n};\n\n// REDUCER\nexport default function classroom(state = {}, action) {\n    switch (action.type) {\n        case GET_ALL_CLASSROOMS:\n            return {...state, classrooms: action.classrooms};\n        case GET_CLASSROOM:\n            return {...state, classroom: action.classroom};\n        default:\n            return state;\n    }\n}\n","const io = require('socket.io-client');\nconst socket = io.connect(window.location.origin);\n// const socket = io.connect('http://localhost:5000');\n\nsocket.on('connect', () => {\n    console.log('Connected!', `${socket.id}`);\n});\n\nsocket.on('disconnect', () => {\n    console.log('Disconnected!');\n});\n\nexport default socket;\n","import axios from 'axios'\n\n// ACTION TYPES\nimport {GET_ALL_TOPICS, SELECT_TOPIC} from './index'\nimport socket from '../socket';\n\n// ACTION CREATORS\nexport function selectedTopic({allTopics, selectedTopic}) {\n    const action = {type: SELECT_TOPIC, allTopics, selectedTopic};\n    return action;\n}\n\nexport function gotAllTopics(allTopics) {\n    const action = {type: GET_ALL_TOPICS, allTopics};\n    return action;\n}\n\n// THUNKS\nexport const getAllTopics = (projectId) => {\n    return async dispatch => {\n        try {\n            const {data} = await axios.get(`/api/topics/${projectId}`);\n            dispatch(gotAllTopics(data));\n        } catch (err) {\n            console.error(err);\n        }\n    };\n};\nexport const selectTopic = (topic) => {\n    return async dispatch => {\n        const {data} = await axios.post(`/api/topics/select`, topic);\n        dispatch(selectedTopic(data));\n        socket.emit('select-topic', {projectId: data.selectedTopic.projectId});\n    };\n};\n// REDUCER\nexport default function topic(state = {}, action) {\n    switch (action.type) {\n        case SELECT_TOPIC:\n            return {...state, allTopics: action.allTopics, selectedTopic: action.selectedTopic};\n        case GET_ALL_TOPICS:\n            return {...state, allTopics: action.allTopics};\n        default:\n            return state;\n    }\n}\n","import axios from 'axios'\n\n// ACTION TYPES\nimport {GET_PROJECT} from './index'\n\n// ACTION CREATORS\nexport function gotProject(project) {\n    const action = {type: GET_PROJECT, project};\n    return action;\n}\n\nexport const getProject = (linkName) => {\n    return async dispatch => {\n        const {data} = await axios.get(`/api/projects${linkName}`);\n        dispatch(gotProject(data));\n    };\n};\n\nexport const createProject = (project) => {\n    return async () => {\n        await axios.post(`/api/projects/create`, project);\n    };\n};\n\nexport const updateProject = (project) => {\n    return async () => {\n        await axios.post(`/api/projects/update`, project);\n    };\n};\n\nexport const deleteProject = (id) => {\n    return async () => {\n        await axios.get(`/api/projects/delete/${id}`);\n    };\n};\n\nexport const deleteTopic = (topicId) => {\n    return async dispatch => {\n        const {data} = await axios.get(`/api/projects/delete/topic/${topicId}`);\n        dispatch(gotProject(data));\n    };\n};\n\n// REDUCER\nexport default function project(state = {}, action) {\n    switch (action.type) {\n        case GET_PROJECT:\n            return {...state, project: action.project};\n        default:\n            return state;\n    }\n}\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk'\nimport {createLogger} from 'redux-logger';\nimport user from './user';\nimport classroom from './classroom';\nimport topic, {getAllTopics} from './topic';\nimport project from './project';\nimport socket from '../socket';\n\nexport const GET_ALL_CLASSROOMS = 'GET_ALL_CLASSROOMS';\nexport const GET_CLASSROOM = 'GET_CLASSROOM';\n\nexport const GET_PROJECT = 'GET_PROJECT';\n\nexport const SELECT_TOPIC = 'SELECT_TOPIC';\nexport const GET_ALL_TOPICS = 'GET_ALL_TOPICS';\n\nsocket.on('topic', (projectId) => {\n    store.dispatch(getAllTopics(projectId));\n});\n\nconst rootReducer = combineReducers({\n    user,\n    classroom,\n    project,\n    topic\n})\n\nconst middleware =\n    applyMiddleware(thunkMiddleware, createLogger({collapsed: true})\n    );\n\nconst store = createStore(\n    rootReducer, middleware\n);\n\nexport default store;\nexport * from './user';\nexport * from './classroom';\nexport * from './project';\nexport * from './topic';\n","import React from 'react';\n\nexport const Login = () => {\n    return (\n        <div className='popup-login'>\n            <div className='popup_inner'>\n                <div className={'login'}>\n                    <h3>Welcome to ezgp!</h3>\n                        <p>Create any group project, first-come-first-served.</p>\n                    <br/>\n                        <a href={`/auth/google/home`}><button>Teacher Log In with Google</button></a>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport history from '../../history';\n\nexport const NotFound = (props) => {\n    const {pathname} = window.location,\n        [linkName, setLinkName] = useState();\n\n    return (\n        <div className='popup-login'>\n            <div className='popup_inner'>\n                <div className={'login'}>\n                    <p>Sorry, the project code: <span className='login-code'>{`${pathname.replace('/', '')}`}</span> was\n                        not found</p>\n                    <p htmlFor=\"linkName\">Try another code:</p>\n                    <div className={'login-code-input'}>\n                        <input type=\"text\" name=\"linkName\" onChange={(e) => setLinkName(e.target.value)}/>\n                        <button disabled={!linkName} onClick={() => {\n                            props.getProject(`/${linkName}`);\n                            history.push(`/${linkName}`);\n                        }}>Go!\n                        </button>\n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport const JoinProject = () => {\n    const {pathname} = window.location;\n    return (\n        <div className='popup-login'>\n            <div className='popup_inner'>\n                <div className={'login'}>\n                    <h3>Welcome to ezgp!</h3>\n                        <div>\n                            <p>{`Join group project code: `}</p>\n                            <p className='login-code'>{`${pathname.replace('/', '')}`}</p>\n                        </div>\n                        <br/>\n                        <a href={`/auth/google${pathname}`}>\n                            <button>Student Log In with Google</button>\n                        </a>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSignOutAlt} from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\n\nexport const TitleBar = (props) => {\n    const {text, logout} = props;\n    return (\n        <div className={'title-bar'}>\n            <h1>{props.user ? `Hi, ${props.user.name}! ` : null}{text}</h1>\n            <button onClick={logout} className={'logout-button'}>\n                <FontAwesomeIcon icon={faSignOutAlt}/>\n                Logout\n            </button>\n        </div>\n    )\n}\n","import React, {Component} from 'react';\nimport {deleteProject, deleteTopic, getProject, updateProject} from '../../store';\nimport {connect} from 'react-redux';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faEdit, faTrashAlt} from '@fortawesome/free-regular-svg-icons';\nimport {faCheck, faExternalLinkAlt, faPlus} from '@fortawesome/free-solid-svg-icons';\nimport {compact, isEmpty, isString, keyBy, maxBy, omit, partition, sortBy, values} from 'lodash';\n\nclass Project extends Component {\n    constructor(props) {\n        super(props);\n        const {name, linkName, topics, maxStudents, shortName, instructions, description} = props.project;\n        this.initialState = {\n            showDetail: false,\n            editTopics: false,\n            isDirty: false,\n            isTopicsListDirty: false,\n            newTopicCount: 0,\n            errors: {}\n        };\n        this.state = {\n            name,\n            maxStudents,\n            linkName,\n            shortName,\n            instructions,\n            description,\n            topics: keyBy(topics, 'id'),\n            ...this.initialState\n        };\n        this.toggleViewDetail = this.toggleViewDetail.bind(this);\n        this.editTopics = this.editTopics.bind(this);\n        this.handleTopicChange = this.handleTopicChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addTopic = this.addTopic.bind(this);\n        this.deleteTopic = this.deleteTopic.bind(this);\n        this.deleteProject = this.deleteProject.bind(this);\n    }\n\n    toggleViewDetail() {\n        this.setState({\n            ...this.state,\n            showDetail: !this.state.showDetail\n        });\n    }\n\n    async deleteProject(evt) {\n        evt.preventDefault();\n        await this.props.deleteProject(this.props.project.id);\n        this.props.fetchClassroom();\n    }\n\n    handleChange(evt) {\n        let errors = this.state.errors,\n            value = evt.target.value\n        value = isString(value) ? value.trim() : value;\n        switch (evt.target.name) {\n            case 'topic':\n                return;\n            case 'maxStudents': {\n                const minStudents = maxBy(values(this.state.topics), (t) => t.students.length)?.students.length || 1;\n                errors.maxStudents = value < minStudents ?\n                    `Min. ${minStudents} students` :\n                    value > 8 ?\n                        'Max. 8 students' :\n                        null;\n                break;\n            }\n            case 'shortName':\n                errors.shortName = value.length < 1 ? 'Required' : null\n                break;\n            case 'description':\n            case 'instructions':\n                errors[evt.target.name] = value.length < 4 ? 'Min. 4 characters' : null\n                break;\n            case 'linkName': {\n                if (value.length < 4) {\n                    errors.linkName = 'Min. 4 characters';\n                } else {\n                    const regex = new RegExp(`^[a-zA-Z0-9]{4,50}$`);\n                    errors.linkName = !regex.test(value) ? 'Link names can only contain alphanumeric characters' : null;\n                }\n                break;\n            }\n            default:\n                break;\n        }\n        this.setState({...this.state, isDirty: true, errors, [evt.target.name]: value});\n    }\n\n    async handleSubmit(evt) {\n        const {name, linkName, topics, maxStudents, shortName, instructions, description, isDirty, isTopicsListDirty, errors} = this.state;\n        evt.preventDefault();\n        if (!isEmpty(compact(values(errors)))) {\n            return;\n        }\n\n        const data = {\n            id: this.props.id,\n            name,\n            linkName,\n            maxStudents,\n            shortName,\n            instructions,\n            description\n        };\n        // Do not update if not dirty\n        if (!isTopicsListDirty && !isDirty) {\n            this.setState(this.initialState)\n            return;\n        }\n\n        if (isTopicsListDirty) {\n            data.topics = values(topics).map(it => it.name);\n        }\n\n        await this.props.updateProject(data)\n        this.props.fetchClassroom();\n        this.setState(this.initialState);\n    }\n\n    editTopics() {\n        this.setState({\n            ...this.state,\n            editTopics: !this.state.editTopics\n        });\n    }\n\n    addTopic(evt) {\n        evt.preventDefault();\n        const {topics, newTopicCount} = this.state;\n        this.setState({\n            ...this.state,\n            topics: {...topics, [`new${newTopicCount}`]: {id: `new${newTopicCount}`, name: ''}},\n            newTopicCount: newTopicCount + 1,\n            isDirty: true,\n            isTopicsListDirty: true\n        });\n    }\n\n    handleTopicChange(evt, topic) {\n        const {topics} = this.state;\n        topics[topic.id].name = evt.target.value?.trim();\n        this.setState({...this.state, topics, isDirty: true, isTopicsListDirty: true})\n    }\n\n    deleteTopic(evt, topic) {\n        evt.preventDefault();\n        // Only delete topic from API if saved\n        if (!topic.id.toString().startsWith('new')) {\n            this.props.deleteTopic(topic.id);\n        }\n        this.setState({...this.state, topics: omit(this.state.topics, topic.id)})\n    }\n\n    render() {\n        if (!this.props.project) return null;\n        const {name, linkName, maxStudents, shortName, instructions, description, showDetail, editTopics, topics, isDirty, errors} = this.state,\n            {handleChange, handleTopicChange, handleSubmit, deleteTopic, addTopic, deleteProject} = this,\n            [newTopics, oldTopics] = partition(topics, (it) => it.id.toString().startsWith('new')),\n            allTopics = sortBy(oldTopics, 'name').concat(newTopics),\n            minStudents = maxBy(values(this.state.topics), (t) => t.students?.length)?.students.length || 1;\n\n        return (\n            !showDetail ?\n                <div className={'project-swatch'} onClick={this.toggleViewDetail}>\n                    <h2 className={'project-title'}>{name}</h2>\n                </div> :\n                <div className={'project-swatch-detail'}>\n                    <h2 className={'project-title'}>{name}</h2>\n                    <div className={'project-detail'}>\n                        <div className={'topic-container'}>\n                            <div className={'topic-header'}>\n                                <h3>Topic List</h3>\n                                <button className=\"edit-button\" onClick={this.editTopics}>\n                                    <FontAwesomeIcon icon={faEdit}/>\n                                    Edit\n                                </button>\n                            </div>\n                            <ol>{allTopics?.map(t => (\n                                <li key={t.id}>\n                                    {\n                                        editTopics ?\n                                            <div className=\"topic-input\">\n                                                <input onChange={(e) => handleTopicChange(e, t)} type=\"text\"\n                                                       name=\"topic\" defaultValue={t.name}/>\n                                                <FontAwesomeIcon className=\"delete-topic\" icon={faTrashAlt}\n                                                                 onClick={(e) => deleteTopic(e, t)}/>\n                                            </div> :\n                                            t.name\n                                    }\n                                </li>)\n                            )}</ol>\n                            {\n                                editTopics ?\n                                    <button className=\"add-button\" onClick={addTopic}>\n                                        <FontAwesomeIcon icon={faPlus}/>\n                                        Add Another Topic\n                                    </button> :\n                                    <h4>{allTopics.length} Topics</h4>\n                            }\n                        </div>\n                        <div className={'form-fields'}>\n                            <form className=\"form-inline\">\n                                <label htmlFor=\"linkName\">Link name* <a\n                                    href={`/${!isDirty ? linkName : this.props.project.linkName}`}\n                                    rel='noopener noreferrer' target='_blank'>\n                                    <FontAwesomeIcon icon={faExternalLinkAlt}/></a>\n                                    {errors.linkName ? <p>{errors.linkName}</p> : null}\n                                </label>\n                                <input onChange={handleChange} type=\"text\" name=\"linkName\" defaultValue={linkName}/>\n                                <label htmlFor=\"maxStudents\">\n                                    Max. students*\n                                    {errors.maxStudents ? <p>{errors.maxStudents}</p> : <p> (per group)</p>}\n                                </label>\n                                <input onChange={handleChange} type=\"number\" name=\"maxStudents\"\n                                       defaultValue={maxStudents} placeholder={minStudents} min={minStudents} max={8}\n                                />\n                                <label htmlFor=\"shortName\">\n                                    Short name*\n                                    {errors.shortName ? <p>{errors.shortName}</p> : null}\n                                </label>\n                                <input onChange={handleChange} type=\"text\" name=\"shortName\" defaultValue={shortName}/>\n                                <label htmlFor=\"Description\">\n                                    Description*\n                                    {errors.description ? <p>{errors.description}</p> : null}\n                                </label>\n                                <textarea onChange={handleChange} name=\"description\" defaultValue={description}/>\n                                <label htmlFor=\"Instructions\">\n                                    Instructions*\n                                    {errors.instructions ? <p>{errors.instructions}</p> : null}\n                                </label>\n                                <textarea onChange={handleChange} name=\"instructions\" defaultValue={instructions}/>\n                            </form>\n                            <div className={\"action-button\"}>\n                                <button\n                                    className=\"delete-button\"\n                                    onClick={(e) => deleteProject(e)}>\n                                    <FontAwesomeIcon icon={faTrashAlt}/>\n                                    Delete\n                                </button>\n                                <button\n                                    className=\"submit-button\"\n                                    title={compact(values(errors)).length ? 'Resolve errors before saving' : null}\n                                    disabled={compact(values(errors)).length}\n                                    onClick={handleSubmit}>\n                                    <FontAwesomeIcon icon={faCheck}/>\n                                    {isDirty ? 'Save' : 'Done'}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    getProject: (linkName) => dispatch(getProject(linkName)),\n    updateProject: (project) => dispatch(updateProject(project)),\n    deleteProject: (projectId) => dispatch(deleteProject(projectId)),\n    deleteTopic: (topicId) => dispatch(deleteTopic(topicId))\n})\n\nexport default connect(null, mapDispatchToProps)(Project);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {createProject} from '../../store'\nimport {compact, isEmpty, isString, map, omit, values} from 'lodash';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCheck, faPlus} from '@fortawesome/free-solid-svg-icons';\nimport {faTrashAlt} from '@fortawesome/free-regular-svg-icons';\n\nclass CreateProject extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: null,\n            topics: {},\n            maxStudents: null,\n            shortName: null,\n            instructions: null,\n            description: null,\n            newTopicCount: null,\n            errors: {}\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.deleteTopic = this.deleteTopic.bind(this);\n        this.handleTopicChange = this.handleTopicChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addTopic = this.addTopic.bind(this);\n    }\n\n    handleChange(evt) {\n        let errors = this.state.errors,\n            value = evt.target.value\n        value = isString(value) ? value.trim() : value;\n\n        switch (evt.target.name) {\n            case 'topic':\n                return;\n            case 'maxStudents': {\n                errors.maxStudents = value < 1 ?\n                    `Min. 1 student` : value > 8 ?\n                        'Max. 8 students' :\n                        null;\n                break;\n            }\n            case 'shortName':\n                errors.shortName = value.length < 1 ? 'Required' : null\n                break;\n            case 'name':\n            case 'description':\n            case 'instructions':\n                errors[evt.target.name] = value.length < 4 ? 'Min. 4 characters' : null\n                break;\n            case 'linkName': {\n                if (value.length < 4) {\n                    errors.linkName = 'Min. 4 characters';\n                } else {\n                    const regex = new RegExp(`^[a-zA-Z0-9]{4,50}$`);\n                    errors.linkName = !regex.test(value) ? 'Link names can only contain alphanumeric characters' : null;\n                }\n                break;\n            }\n            default:\n                break;\n        }\n        this.setState({...this.state, errors, [evt.target.name]: value});\n    }\n\n    async handleSubmit(evt) {\n        const {name, linkName, topics, maxStudents, shortName, instructions, description, errors} = this.state;\n        evt.preventDefault();\n        if (!isEmpty(compact(values(errors)))) {\n            return;\n        }\n        const data = {\n            id: this.props.id,\n            classroomId: this.props.classroomId,\n            name,\n            linkName,\n            maxStudents,\n            shortName,\n            instructions,\n            description\n        };\n\n        if (!isEmpty(topics)) {\n            data.topics = compact(map(values(topics), 'name'));\n        }\n\n        await this.props.createProject(data);\n        this.props.fetchClassroom();\n        this.props.setIsAdding(false);\n    }\n\n    handleTopicChange(evt, topicId) {\n        const {topics} = this.state;\n        topics[topicId].name = evt.target.value?.trim();\n        this.setState({...this.state, topics})\n    }\n\n    addTopic(evt) {\n        evt.preventDefault();\n        const {topics, newTopicCount} = this.state;\n        this.setState({\n            ...this.state,\n            topics: {...topics, [`new${newTopicCount}`]: {id: `new${newTopicCount}`, name: ''}},\n            newTopicCount: newTopicCount + 1\n        });\n    }\n\n    deleteTopic(evt, topicId) {\n        evt.preventDefault();\n        this.setState({...this.state, topics: omit(this.state.topics, topicId)})\n    }\n\n    render() {\n        const {topics, errors, name, shortName, maxStudents, description, instructions} = this.state,\n            formNotValid = !name || !shortName || !maxStudents || !description || !instructions,\n            {handleChange, handleTopicChange, handleSubmit, deleteTopic, addTopic} = this;\n\n        return (\n            <div className={'project-swatch-detail__create'}>\n                <div className={'project-detail'}>\n                    <div className={'topic-container'}>\n                        <div className={'topic-header'}>\n                            <h3>Topic List</h3>\n                        </div>\n                        <ol>{values(topics)?.map(t => (\n                            <li key={t.id}>\n                                <div className=\"topic-input\">\n                                    <input onChange={(e) => handleTopicChange(e, t.id)} type=\"text\"\n                                           name=\"topic\"/>\n                                    <FontAwesomeIcon className=\"delete-topic\" icon={faTrashAlt}\n                                                     onClick={(e) => deleteTopic(e, t.id)}/>\n                                </div>\n                            </li>)\n                        )}</ol>\n                        <button className=\"add-button\" onClick={addTopic}>\n                            <FontAwesomeIcon icon={faPlus}/>\n                            Add Another Topic\n                        </button>\n\n                    </div>\n                    <div className={'form-fields'}>\n                        <form className=\"form-inline\">\n                            <label htmlFor=\"name\">\n                                Project name*\n                                {errors.name ? <p>{errors.name}</p> : null}\n                            </label>\n                            <input onChange={handleChange} type=\"text\" name=\"name\"/>\n                            <label htmlFor=\"maxStudents\">\n                                Max. students*\n                                {errors.maxStudents ? <p>{errors.maxStudents}</p> : <p> (per group)</p>}\n                            </label>\n                            <input onChange={handleChange} type=\"number\" name=\"maxStudents\" min={1} max={8}\n                                   placeholder={'e.g. 1'}/>\n                            <label htmlFor=\"shortName\">\n                                Short name*\n                                {errors.shortName ? <p>{errors.shortName}</p> : null}\n                            </label>\n                            <input onChange={handleChange} type=\"text\" name=\"shortName\"/>\n                            <label htmlFor=\"Description\">\n                                Description*\n                                {errors.description ? <p>{errors.description}</p> : null}\n                            </label>\n                            <textarea onChange={handleChange} name=\"description\"/>\n                            <label htmlFor=\"Instructions\">\n                                Instructions*\n                                {errors.instructions ? <p>{errors.instructions}</p> : null}\n                            </label>\n                            <textarea onChange={handleChange} name=\"instructions\"/>\n                        </form>\n                        <div className={'action-button'}>\n                            <button onClick={() => this.props.setIsAdding(false)}>Cancel</button>\n                            <button\n                                className=\"submit-button\"\n                                title={compact(values(errors)).length ? 'Resolve errors before saving' : null}\n                                disabled={compact(values(errors)).length || formNotValid}\n                                onClick={handleSubmit}>\n                                <FontAwesomeIcon icon={faCheck}/>\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    createProject: (project) => dispatch(createProject(project))\n})\n\nexport default connect(null, mapDispatchToProps)(CreateProject);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {getClassroom, logout} from '../../store'\nimport Project from './Project';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\nimport CreateProject from './CreateProject';\n\nclass Classroom extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAdding: false\n        };\n        this.setIsAdding = this.setIsAdding.bind(this);\n        this.fetchClassroom = this.fetchClassroom.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchClassroom();\n    }\n\n    fetchClassroom() {\n        this.props.getClassroom(this.props.id);\n    }\n\n    setIsAdding(isAdding) {\n        this.setState({isAdding})\n    }\n\n    render() {\n        const {classroom} = this.props;\n        if (!classroom) return null;\n        const {projects} = classroom;\n        return (\n            <div className='Admin'>\n                <div className=\"projects-container\">\n                    {projects?.length ? projects.map((project) => {\n                            const {id} = project;\n                            return <Project\n                                key={id}\n                                id={id}\n                                project={project}\n                                fetchClassroom={this.fetchClassroom}\n                            />\n                        }) :\n                        null\n                    }\n                    {\n                        this.state.isAdding ?\n                            <CreateProject\n                                key={classroom.id}\n                                classroomId={classroom.id}\n                                setIsAdding={this.setIsAdding}\n                                fetchClassroom={this.fetchClassroom}\n                            /> :\n                            <button className=\"new-project-button\" onClick={() => this.setIsAdding(true)}>\n                                <FontAwesomeIcon icon={faPlus}/>\n                                Create a new project\n                            </button>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    classroom: state.classroom.classroom\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getClassroom: (id) => dispatch(getClassroom(id)),\n    logout: () => dispatch(logout())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Classroom);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {createClassroom} from '../../store'\nimport {compact, isEmpty, isString, values} from 'lodash';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCheck} from '@fortawesome/free-solid-svg-icons';\n\nclass CreateClassroom extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: null,\n            description: null,\n            errors: {}\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(evt) {\n        let errors = this.state.errors,\n            value = evt.target.value\n        value = isString(value) ? value.trim() : value;\n\n        switch (evt.target.name) {\n            case 'name':\n            case 'description':\n                errors[evt.target.name] = evt.target.value.length < 4 ? 'Min. 4 characters' : null\n                break;\n            default:\n                break;\n        }\n        this.setState({...this.state, errors, [evt.target.name]: value});\n    }\n\n    async handleSubmit(evt) {\n        const {name, description, errors} = this.state;\n        evt.preventDefault();\n        if (!isEmpty(compact(values(errors)))) {\n            return;\n        }\n        const data = {\n            name,\n            description\n        };\n\n        await this.props.createClassroom(data);\n        this.props.getClassrooms();\n        this.props.setClassroom(this.props.classroom);\n        this.props.setIsAdding(false);\n    }\n\n    render() {\n        const {errors} = this.state,\n            {handleChange, handleSubmit} = this;\n\n        return (\n            <div className={'create-classroom-form'}>\n                <form>\n                    <label htmlFor=\"name\">\n                        Name*\n                        {errors.name ? <p>{errors.name}</p> : null}\n                    </label>\n                    <input onChange={handleChange} type=\"text\" name=\"name\"/>\n                    <label htmlFor=\"Description\">\n                        Description*\n                        {errors.description ? <p>{errors.description}</p> : null}\n                    </label>\n                    <textarea onChange={handleChange} name=\"description\" placeholder=\"e.g. Period 1, 8:30am\"/>\n                </form>\n                <div className={'action-button'}>\n                    <button onClick={() => this.props.setIsAdding(false)}>Cancel</button>\n                    <button\n                        className=\"submit-button\"\n                        title={compact(values(errors)).length ? 'Resolve errors before saving' : null}\n                        disabled={compact(values(errors)).length}\n                        onClick={handleSubmit}>\n                        <FontAwesomeIcon icon={faCheck}/>\n                        Save\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    classroom: state.classroom.classroom\n});\n\nconst mapDispatchToProps = dispatch => ({\n    createClassroom: (classroom) => dispatch(createClassroom(classroom))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateClassroom);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {getAllClassrooms, logout} from '../../store'\nimport {sortBy} from 'lodash';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\nimport {TitleBar} from '../TitleBar';\nimport './admin.scss';\nimport Classroom from './Classroom';\nimport CreateClassroom from './CreateClassroom';\n\nclass Admin extends Component {\n    constructor() {\n        super();\n        this.state = {\n            classroomId: null,\n            classroomName: null,\n            isAdding: false\n        };\n        this.setClassroom = this.setClassroom.bind(this);\n        this.setIsAdding = this.setIsAdding.bind(this);\n        this.getClassrooms = this.getClassrooms.bind(this);\n    }\n\n    setClassroom(classroom) {\n        const {id, name} = classroom;\n        this.setState({...this.state, classroomId: id, classroomName: name});\n    }\n\n    setIsAdding(isAdding) {\n        this.setState({isAdding})\n    }\n\n    getClassrooms() {\n        this.props.getClassrooms();\n    }\n\n    componentDidMount() {\n        this.getClassrooms();\n    }\n\n    render() {\n        const {user, logout, classrooms} = this.props,\n            {classroomId, classroomName} = this.state;\n        return (\n            <div className='Admin'>\n                <div className=\"sidebar\">\n                    <h3>{user.name}'s Classes</h3>\n                    {classrooms?.length ? classrooms?.map((classroom) => {\n                            const {id, name, description} = classroom;\n                            return(\n                                <div className={classroomId === id ? 'classroom--selected' : 'classroom'} key={id} onClick={() => this.setClassroom({id, name})}>\n                                    <h2 className={'classroom__title'}>{name}</h2>\n                                    <p className={'classroom__description'}>{description}</p>\n                                </div>\n                            )\n                        }) :\n                        'Loading Classroom'\n                    }\n                    {\n                        this.state.isAdding ?\n                            <CreateClassroom\n                                setIsAdding={this.setIsAdding}\n                                getClassrooms={this.getClassrooms}\n                                setClassroom={this.setClassroom}\n                            /> :\n                            <button className=\"new-class-button\" onClick={() => this.setIsAdding(true)}>\n                                <FontAwesomeIcon icon={faPlus}/>\n                                Create a new classroom\n                            </button>\n                    }\n                </div>\n                <div className=\"main\">\n                    <TitleBar logout={logout} text={`${classroomName ?? 'Manage Classrooms'}`} />\n                    {classroomId ?\n                        <Classroom\n                            key={classroomId}\n                            id={classroomId}\n                        /> :\n                        null\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    classrooms: sortBy(state.classroom.classrooms, 'name')\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getClassrooms: () => dispatch(getAllClassrooms()),\n    logout: () => dispatch(logout())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\n","import React from 'react';\n\nclass Popup extends React.Component {\n    render() {\n        const {closePopup, project} = this.props\n        return (\n            <div className='popup'>\n                <div className='popup_inner'>\n                    <div className={'message'}>\n                        <h3>{project.name}</h3>\n                        <p>{project.description}</p>\n                        <p>Instructions: {project.instructions}</p>\n                        <button onClick={closePopup}>OK!</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Popup;","import React, {Component} from 'react';\n\nclass Topic extends Component {\n\n    render() {\n        const {maxStudents, name, id, students} = this.props,\n            studentCount = students.length,\n            isFull = studentCount === maxStudents,\n            rgb = [];\n\n        for (let i = 0; i < 3; i++) {\n            let r = Math.floor(Math.random() * 256);\n            if (r - rgb[i] < 10) {\n                r += 20;\n            }\n            rgb.push(r);\n        }\n        return (\n            <div className={isFull ? 'topic-swatch__selected' : 'topic-swatch'}\n                 style={{backgroundColor: `rgb(${rgb})`}}\n                 onClick={() => this.props.selectTopic({id, name, isFull})}\n            >\n                <h2>{name}</h2>\n                <div className='group'>\n                    {isFull ? students.map((s, i) => (<p key={i}>{s.name}</p>)) : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Topic","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport Popup from './app/Popup'\nimport Topic from './app/Topic';\nimport {getAllTopics, logout, selectTopic} from '../store'\nimport {sortBy} from 'lodash';\nimport {TitleBar} from './TitleBar';\n\nclass Home extends Component {\n    constructor() {\n        super();\n        this.state = {\n            showPopup: true\n        };\n        this.handleSelect = this.handleSelect.bind(this);\n        this.closePopup = this.closePopup.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    closePopup() {\n        this.setState({\n            showPopup: false\n        });\n    }\n\n    logout() {\n        this.props.logout();\n    }\n\n    handleSelect({id, name, isFull}) {\n        const {user, selectedTopic, allTopics, project} = this.props;\n\n        if (selectedTopic || allTopics.find(it => it.students.find(s => s.googleId === user.googleId))) {\n            alert('You already chose a topic');\n            return;\n        }\n        if (!isFull) {\n            this.props.chooseTopic({id: id, student: user});\n            alert(`You chose well! Your topic for ${project.name} is: ${name}`);\n        } else {\n            alert('The topic is already taken! Choose another!');\n        }\n    }\n\n    componentDidMount() {\n        this.props.getTopics(this.props.project.id);\n    }\n\n    render() {\n        const {allTopics, project, user, logout} = this.props,\n            columnNum = Math.ceil(Math.sqrt(allTopics.length));\n        return (\n            <div className='App'>\n                {this.state.showPopup ? <Popup project={project} closePopup={this.closePopup}/> : null}\n                <TitleBar user={user} logout={logout} text={`Choose your ${project.shortName ?? project.name} topic`} />\n                <div className={`app-container-${columnNum > 5 ? 5 : columnNum}`}>\n                    {allTopics?.length ? allTopics?.map((topic) => {\n                            return <Topic\n                                key={topic.id}\n                                id={topic.id}\n                                name={topic.name}\n                                students={topic.students}\n                                maxStudents={project.maxStudents}\n                                selectTopic={this.handleSelect}\n                            />\n                        })\n                        : 'Loading Topic Name'}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    allTopics: sortBy(state.topic.allTopics, 'name'),\n    user: state.user,\n    selectedTopic: state.topic.selectedTopic,\n    project: state.project.project\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getTopics: (projectId) => dispatch(getAllTopics(projectId)),\n    chooseTopic: (topic) => dispatch(selectTopic(topic)),\n    logout: () => dispatch(logout())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\n\nexport const ComingSoon = () => {\n    return (\n        <div className='popup-login'>\n            <div className='popup_inner'>\n                <div className={'login'}>\n                    <h2>{'Sorry, classroom creation page coming soon!'}</h2>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Route, Switch, withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {getProject, me} from './store';\nimport {Login} from './components/Login';\nimport {NotFound} from './components/app/NotFound';\nimport {JoinProject} from './components/app/JoinProject';\nimport Admin from './components/admin/Admin';\nimport Home from './components/Home';\nimport {ComingSoon} from './components/admin/ComingSoon';\n\n/**\n * COMPONENT\n */\nclass Routes extends Component {\n    componentDidMount() {\n        this.props.getUser().then(() => {\n            if (this.props.isLoggedIn) {\n                const {pathname} = this.props.location;\n                if (!pathname || ['/', '/home'].includes(pathname) || pathname.split('/').length > 2) return;\n                this.props.getProject(this.props.location.pathname);\n            }\n        })\n    }\n\n    render() {\n        const {isLoggedIn, project} = this.props;\n\n        return (\n            <Switch>\n                <Route exact path=\"/home\" component={isLoggedIn ? Admin : Login}/>\n                {isLoggedIn && <Route path=\"/home/classroom/:id\" component={Admin}/>}\n                {isLoggedIn && <Route exact path=\"/create/classroom\" component={ComingSoon}/>}\n\n                {isLoggedIn ?\n                    <Route path=\"/:linkName\"\n                           render={(props) => project ?\n                               <Home {...props} /> :\n                               <NotFound getProject={this.props.getProject}/>}\n                    /> :\n                    <Route path=\"/:linkName\" component={JoinProject}/>\n                }\n\n                {/*Displays our Login component as a fallback if no project exists */}\n                <Route exact path=\"/\" component={isLoggedIn ? Admin : Login}/>\n\n            </Switch>\n        )\n    }\n}\n\n/**\n * CONTAINER\n */\nconst mapState = state => {\n    return {\n        // Being 'logged in' for our purposes will be defined has having a state.user that has a truthy id.\n        // Otherwise, state.user will be an empty object, and state.user.id will be falsey\n        isLoggedIn: !!state.user?.googleId,\n        user: state.user,\n        project: state.project.project\n    }\n}\n\nconst mapDispatch = dispatch => {\n    return {\n        getUser: () => dispatch(me()),\n        getProject: (linkName) => dispatch(getProject(linkName))\n    }\n}\n\n// The `withRouter` wrapper makes sure that updates are not blocked\n// when the url changes\nexport default withRouter(connect(mapState, mapDispatch)(Routes))\n\n/**\n * PROP TYPES\n */\nRoutes.propTypes = {\n    getUser: PropTypes.func.isRequired,\n    isLoggedIn: PropTypes.bool.isRequired,\n    getProject: PropTypes.func.isRequired\n}","import React, {Component} from 'react';\nimport Routes from './Routes';\n\nexport default class App extends Component {\n\n    render() {\n        return (\n            <div>\n                <Routes/>\n            </div>\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Router} from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from '../src/store'\nimport {Provider} from 'react-redux'\nimport history from './history'\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App/>\n        </Router>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}